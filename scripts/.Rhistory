knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(tidyr)
library(tidybulk)
# import:
GenewiseCounts <- read.delim(
"~/Documents/riboseq_experiments/pna_retseq_11_2020/data/rna_align/count_table_genenames.txt",sep = "\t", header = T, comment.char = "#")
dim(GenewiseCounts)
head(GenewiseCounts[,1:6])
gwc <- GenewiseCounts[,c(1,7:length(GenewiseCounts[1,])-1)]
pnapat <- ".*\\.(later|beginning)\\.(ctrl|[0-9]*nM)?.*\\.bam"
colnames (gwc) <- gsub(pnapat,"\\1\\2", colnames(gwc))
colnames (gwc) <- gsub(".*(Undetermined).*","\\1", colnames(gwc))
#gwc <- gwc[,-1]
test <- factor(colnames(gwc))
head(gwc)
colnames(gwc)[1] <- "transcript"
raw_counts <- pivot_longer(gwc, cols = c(2:length(gwc[1,])), names_to = "sample", values_to = "counts")
counts_scaled %>%
pivot_longer(
c(count, count_scaled),
values_to="count",
names_to="Normalisation"
) %>%
ggplot(aes(count + 1, group=sample, color=type)) +
facet_grid(~Normalisation) +
geom_density() +
scale_x_log10()
norm_counts <- raw_counts %>%  mutate(sample = gsub("(later)|(beginning)", "", sample)) %>%
# convert to tidybulk tibble:
tidybulk(.,sample, transcript, counts) %>%
# Preprocess and scale the data
aggregate_duplicates() %>%
scale_abundance()
counts_scaled %>%
pivot_longer(
c(count, count_scaled),
values_to="count",
names_to="Normalisation"
) %>%
ggplot(aes(count + 1, group=sample, color=type)) +
facet_grid(~Normalisation) +
geom_density() +
scale_x_log10()
norm_counts %>%
pivot_longer(
c(count, count_scaled),
values_to="count",
names_to="Normalisation"
) %>%
ggplot(aes(count + 1, group=sample, color=type)) +
facet_grid(~Normalisation) +
geom_density() +
scale_x_log10()
norm_counts
norm_counts %>%
pivot_longer(
c(counts, counts_scaled),
values_to="count",
names_to="Normalisation"
) %>%
ggplot(aes(counts + 1, group=sample, color=type)) +
facet_grid(~Normalisation) +
geom_density() +
scale_x_log10()
norm_counts$sample
norm_counts %>%
pivot_longer(
c(counts, counts_scaled),
values_to="count",
names_to="Normalisation"
) %>%
ggplot(aes(counts + 1, group=sample, color=sample)) +
facet_grid(~Normalisation) +
geom_density() +
scale_x_log10()
norm_counts %>%
pivot_longer(
c(counts, counts_scaled),
values_to="count",
names_to="Normalisation"
) #%>%
norm_counts %>%
pivot_longer(
c(counts, counts_scaled),
values_to="count",
names_to="Normalisation"
) %>%
ggplot(aes(count + 1, group=sample, color=sample)) +
facet_grid(~Normalisation) +
geom_density() +
scale_x_log10()
norm_counts %>%
pivot_longer(
c(counts, counts_scaled),
values_to="count",
names_to="Normalisation"
) %>%
ggplot(aes(count + 1, group=sample, color=sample)) +
facet_grid(~Normalisation) +
geom_density() +
scale_x_log10()
norm_counts
norm_counts$sample
gwc <- GenewiseCounts[,c(1,7:length(GenewiseCounts[1,])-1)]
pnapat <- ".*\\.(later|beginning)\\.(ctrl|[0-9]*nM)?.*\\.bam"
colnames (gwc) <- gsub(pnapat,"\\1\\2", colnames(gwc))
colnames (gwc) <- gsub(".*(Undetermined).*","\\1", colnames(gwc))
#gwc <- gwc[,-1]
test <- factor(colnames(gwc))
head(gwc)
gwc <- GenewiseCounts[,c(1,8:length(GenewiseCounts[1,])-1)]
pnapat <- ".*\\.(later|beginning)\\.(ctrl|[0-9]*nM)?.*\\.bam"
colnames (gwc) <- gsub(pnapat,"\\1\\2", colnames(gwc))
colnames (gwc) <- gsub(".*(Undetermined).*","\\1", colnames(gwc))
#gwc <- gwc[,-1]
test <- factor(colnames(gwc))
head(gwc)
gwc <- GenewiseCounts[,c(1,8:length(GenewiseCounts[1,]))]
pnapat <- ".*\\.(later|beginning)\\.(ctrl|[0-9]*nM)?.*\\.bam"
colnames (gwc) <- gsub(pnapat,"\\1\\2", colnames(gwc))
colnames (gwc) <- gsub(".*(Undetermined).*","\\1", colnames(gwc))
#gwc <- gwc[,-1]
test <- factor(colnames(gwc))
head(gwc)
gwc <- GenewiseCounts[,c(1,8:length(GenewiseCounts[1,])-1)]
pnapat <- ".*\\.(later|beginning)\\.(ctrl|[0-9]*nM)?.*\\.bam"
colnames (gwc) <- gsub(pnapat,"\\1\\2", colnames(gwc))
colnames (gwc) <- gsub(".*(Undetermined).*","\\1", colnames(gwc))
#gwc <- gwc[,-1]
test <- factor(colnames(gwc))
head(gwc)
colnames(gwc)[1] <- "transcript"
raw_counts <- pivot_longer(gwc, cols = c(2:length(gwc[1,])), names_to = "sample", values_to = "counts")
norm_counts <- raw_counts %>%  mutate(sample = gsub("(later)|(beginning)", "", sample)) %>%
# convert to tidybulk tibble:
tidybulk(.,sample, transcript, counts) %>%
# Preprocess and scale the data
aggregate_duplicates() %>%
scale_abundance()
norm_counts %>%
pivot_longer(
c(counts, counts_scaled),
values_to="count",
names_to="Normalisation"
) %>%
ggplot(aes(count + 1, group=sample, color=sample)) +
facet_grid(~Normalisation) +
geom_density() +
scale_x_log10()
tt_mds <- tt_scaled %>% reduce_dimensions(method="MDS", .dims = 3)
tt_mds <- norm_counts %>% reduce_dimensions(method="MDS", .dims = 3)
tt_mds <- norm_counts %>% reduce_dimensions(method="MDS", .dims = 2)
tt_mds %>%
pivot_sample() %>%
GGally::ggpairs(columns = 7:9, ggplot2::aes(colour=condition))
tt_mds
tt_mds %>%
pivot_sample() %>%
GGally::ggpairs(columns = 9:10, ggplot2::aes(colour=condition))
tt_mds %>%
pivot_sample() %>%
GGally::ggpairs(columns = 7:9, ggplot2::aes(colour=sample))
tt_mds %>%
pivot_sample()# %>%
tt_mds %>%
pivot_sample() %>%
GGally::ggpairs(columns = 6:7, ggplot2::aes(colour=sample))
tt_mds %>%
pivot_sample() %>%
GGally::ggpairs(columns = 6:7, ggplot2::aes(colour=sample))
tt_mds %>%
pivot_sample() %>%
GGally::ggpairs(columns = 5:7, ggplot2::aes(colour=sample))
tt_mds %>%
pivot_sample()# %>%
GGally::ggpairs(columns = 6:7, ggplot2::aes(colour=sample))
